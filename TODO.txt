Form:

touched: if any field in the form was focused on and then focuse on something else 
dirty: if any field has a value added or changed

defaultValues: user can add defaultValues to all the fields in the form. The values will only be added if they are matched to a fieldName

* onChange: called when any change occurs in the form
* onSubmit: called on submit 

* onValidate: called for validation
onValidationFail: called when validation fails
onPreValidate: ?

* onPostSubmit: ?
* onPreSubmit: ?


Fields:

* touched: if field was focused on and then focuse on something else (probably activated by blur)
* dirty: if field has a value added or changed

* defaultValue: user can add a defaultValue
* disabled: disables the field based on boolean value

* placeholder: really

* error: display error.

* validateOnSubmitOnly: ???
* validateOnTouched: ???


LEFT 
1. 


NOTE:

1. Might be a good idea to allow field component to be returned as a `li` for list markup.
2. Error handle duplicate field names.

TODO: 
1. The `Label` for attribute should be the same as the input id. 
2. The `Label` should be clickable and set focus to the associated input 
3. CSS class name assignment fit according to style guied MSN.

TODO Maybe:
1. FieldSet
2. Legend

TODO: Long
1. Fix proptype ref setup
2. 


LEARNING:
https://blog.logrocket.com/using-react-children-prop-with-typescript/



CURRENT GIT:
BRANCH: dev/develop_basic_svg_component
1. developed basic storybook for Error component.
2. added class support to error component.
3. added message prop to error component.
4. updated error component callers with changes.
5. updated InputText component with classes prop for error component.


CURRENT GIT:
BRANCH: dev/develop_basic_svg_component
1. updated npm repository pointer to the none experimental repo.
2. included library exposing exports for the form component.
3. updated typescript to support svg file imports.
4. developed recursive field search for adding references.
5. updated form fields with error classes and reference.
